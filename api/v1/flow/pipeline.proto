syntax = "proto3";

package api.v1.flow;
import "protobuf/gogo/gogo.proto";

option (gogoproto.populate_all) = true;
option go_package = "v1/flow;flow";
option java_multiple_files = true;
option java_package = "api.v1.flow";

// Source 数据存储源
message Source {
  int32 id = 1 [(gogoproto.jsontag) = "id"];
  string type = 2 [(gogoproto.jsontag) = "type", (gogoproto.moretags) = "gorm:\"type:varchar(20);not null;comment:es、mysql、zinc\""];
  string host = 3 [(gogoproto.jsontag) = "host", (gogoproto.moretags) = "gorm:\"type:varchar(100);not null;comment:主机ip\""];
  int32 port = 4 [(gogoproto.jsontag) = "port", (gogoproto.moretags) = "gorm:\"comment:端口\""];
  string username = 5 [(gogoproto.jsontag) = "username", (gogoproto.moretags) = "gorm:\"type:varchar(50);comment:数据库用户名\""];
  string password = 6 [(gogoproto.jsontag) = "password", (gogoproto.moretags) = "gorm:\"type:varchar(50);not null;comment:数据库密码\""];
  string remark = 7 [(gogoproto.jsontag) = "remark", (gogoproto.moretags) = "gorm:\"type:text;comment:备注\""];
}

// Sink 数据存储
message Sink {
  int32 id = 1 [(gogoproto.jsontag) = "id"];
  string sink_id = 8 [(gogoproto.jsontag) = "sink_id", (gogoproto.moretags) = "gorm:\"type:varchar(32);unique;not null;comment:sink_id\""];
  string name = 2 [(gogoproto.jsontag) = "name", (gogoproto.moretags) = "gorm:\"type:varchar(50);not null;comment:sink名称\""];
  int32 source_id = 3 [(gogoproto.jsontag) = "source_id", (gogoproto.moretags) = "gorm:\"type:varchar(100);comment:外键ID\""];
  string db_name = 4 [(gogoproto.jsontag) = "db_name", (gogoproto.moretags) = "gorm:\"type:varchar(100);comment:数据库\""];
  string table_name = 5 [(gogoproto.jsontag) = "db_table", (gogoproto.moretags) = "gorm:\"type:varchar(100);comment:数据表\""];
  string remark = 6 [(gogoproto.jsontag) = "remark", (gogoproto.moretags) = "gorm:\"type:text;comment:备注\""];

  // 必须指定一个source源
  Source source = 7 [(gogoproto.jsontag) = "sink_source", (gogoproto.moretags) = "gorm:\"foreignKey:source_id\""];
}